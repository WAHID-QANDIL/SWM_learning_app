// Generated by view binder compiler. Do not edit!
package com.dtu.swm_learningapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dtu.swm_learningapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRegisterFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btRegister;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etMobNumber;

  @NonNull
  public final EditText etName;

  @NonNull
  public final EditText etPass;

  @NonNull
  public final ImageView navController;

  @NonNull
  public final CoordinatorLayout registerFragment;

  @NonNull
  public final TextView tLogin;

  private FragmentRegisterFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button btRegister, @NonNull EditText etEmail, @NonNull EditText etMobNumber,
      @NonNull EditText etName, @NonNull EditText etPass, @NonNull ImageView navController,
      @NonNull CoordinatorLayout registerFragment, @NonNull TextView tLogin) {
    this.rootView = rootView;
    this.btRegister = btRegister;
    this.etEmail = etEmail;
    this.etMobNumber = etMobNumber;
    this.etName = etName;
    this.etPass = etPass;
    this.navController = navController;
    this.registerFragment = registerFragment;
    this.tLogin = tLogin;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRegisterFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRegisterFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_register_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRegisterFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_register;
      Button btRegister = ViewBindings.findChildViewById(rootView, id);
      if (btRegister == null) {
        break missingId;
      }

      id = R.id.et_email;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_mobNumber;
      EditText etMobNumber = ViewBindings.findChildViewById(rootView, id);
      if (etMobNumber == null) {
        break missingId;
      }

      id = R.id.et_name;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_pass;
      EditText etPass = ViewBindings.findChildViewById(rootView, id);
      if (etPass == null) {
        break missingId;
      }

      id = R.id.nav_controller;
      ImageView navController = ViewBindings.findChildViewById(rootView, id);
      if (navController == null) {
        break missingId;
      }

      CoordinatorLayout registerFragment = (CoordinatorLayout) rootView;

      id = R.id.t_login;
      TextView tLogin = ViewBindings.findChildViewById(rootView, id);
      if (tLogin == null) {
        break missingId;
      }

      return new FragmentRegisterFragmentBinding((CoordinatorLayout) rootView, btRegister, etEmail,
          etMobNumber, etName, etPass, navController, registerFragment, tLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
